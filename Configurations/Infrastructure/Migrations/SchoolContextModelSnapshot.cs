// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tutorial.Infrastructure;

namespace Tutorial.Infrastructure.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tutorial.Core.Entities.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CourseId")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<int>("Credits");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Tutorial.Core.Entities.Enrollment", b =>
                {
                    b.Property<Guid>("EnrollmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EnrollmentID")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<Guid>("CourseID");

                    b.Property<int?>("Grade");

                    b.Property<Guid>("StudentID");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("Tutorial.Core.Entities.Student", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnName("EnrollmentID")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstMidName")
                        .HasColumnName("FirstMidName")
                        .HasMaxLength(256);

                    b.Property<string>("LastName")
                        .HasColumnName("LastName")
                        .HasMaxLength(256);

                    b.HasKey("ID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Tutorial.Core.Entities.Enrollment", b =>
                {
                    b.HasOne("Tutorial.Core.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tutorial.Core.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
